# Configuration Loggers
spring.output.ansi.enabled = always
logging.level.fr.formation = DEBUG

# Configuration du port du serveur Tomcat
server.port = 8081

# Demander à SPRING BOOT d'attendre que HIBERNATE génère la structure de la base de données
spring.jpa.defer-datasource-initialization = true

# Afficher les requêtes SQL générées par Hibernate
spring.jpa.show-sql = true

# Configuration du client Discovery Eureka
spring.application.name = produit-service
eureka.client.service-url.defaultZone = http://localhost:8761/eureka/

# Configuration de la Fallback OpenFeign
spring.cloud.openfeign.circuitbreaker.enabled = true
spring.cloud.openfeign.circuitbreaker.alphanumeric-ids.enabled = true

# Configuration Resilience4j Bulkhead
resilience4j.bulkhead.instances.hello.max-concurrent-calls = 2

# Configuration Kafka Broker
spring.cloud.stream.kafka.binder.brokers = localhost:9092

spring.cloud.function.definition = onTopicDemo;onTopicDemoUppercase

# Nom du topic
spring.cloud.stream.bindings.onTopicDemo-in-0.destination = demo

# Groupe à utiliser pour le consumer
spring.cloud.stream.bindings.onTopicDemo-in-0.group = produitService2

spring.cloud.stream.bindings.onTopicDemoUppercase-in-0.destination = demo
spring.cloud.stream.bindings.onTopicDemoUppercase-in-0.group = produitService

spring.cloud.stream.bindings.onTopicDemoUppercase-out-0.destination = demo.uppercase
